---
##################
# BEGIN TEMPLATE #
##################
  kind: "Template"
  apiVersion: "v1"
  metadata: 
    name: "workshop-example"
    annotations: 
      description: "An example PrestaShop application"
      tags: "instant-app,jboss,workshop"
      iconClass: "icon-jboss"
  labels: 
    template: "${APPLICATION_NAME}"
  objects:
#############################
# Layer 0: OpenShift Images #
#############################

###################
# Layer 1: Builds #
###################
    - kind: "BuildConfig"
      apiVersion: "v1"
      metadata: 
        name: "${APPLICATION_NAME}"
        annotations: 
          description: "Defines how to build the application"
      labels:
        application: "${APPLICATION_NAME}"
      spec: 
        source: 
          type: "Git"
          git: 
            uri: "${SOURCE_REPOSITORY_URL}"
            ref: "${SOURCE_REPOSITORY_REF}"
          contextDir: "${CONTEXT_DIR}"
        strategy: 
          type: "Source"
          sourceStrategy: 
            from: 
              kind: "ImageStreamTag"
              namespace: "${NAMESPACE}"
              name: "jboss-webserver30-tomcat7-openshift:latest"
        output: 
          to: 
            kind: "ImageStreamTag"
            name: "${APPLICATION_NAME}:latest"
        triggers: 
          - type: "ImageChange"
            imageChange: {}
          - type: "ConfigChange"
            configChange: {}
          - type: "GitHub"
            github: 
              secret: "${GITHUB_WEBHOOK_SECRET}"
          - type: "Generic"
            generic: 
              secret: "${GENERIC_WEBHOOK_SECRET}"
###################
# Layer 2: Images #
###################	  	  
    - kind: "ImageStream"
      apiVersion: "v1"
      metadata: 
        name: "${APPLICATION_NAME}"
        annotations: 
          description: "Keeps track of changes in the application image"
        labels:
          application: "${APPLICATION_NAME}"
        spec:
          dockerImageRepository: {}
        tags:
          name: latest
########################
# Layer 3: Deployments #
########################
    - 
      kind: "DeploymentConfig"
      apiVersion: "v1"
      metadata: 
        name: "${APPLICATION_NAME}"
        annotations: 
          description: "Defines how to deploy the application server"
        labels:
          deploymentConfig: "${APPLICATION_NAME}"
          application: "${APPLICATION_NAME}"
      spec:
        replicas: 1
        selector:
          deploymentConfig: "${APPLICATION_NAME}"
        strategy: 
          type: "Rolling"
        template:
          metadata:
            name: "${APPLICATION_NAME}"
            labels: 
              deploymentConfig: "${APPLICATION_NAME}"
              application: "${APPLICATION_NAME}"
          spec:
            containers:
            - name: "${APPLICATION_NAME}"
              image: "${APPLICATION_NAME}"
              ports:
              - containerPort: 8080
                protocol: TCP
              - containerPort: 8443
                protocol: TCP
              readinessProbe:
                exec:
                  command:
                    - "/bin/bash"
                    - "-c"
                    - "/opt/eap/bin/readinessProbe.sh"
              resources: {}
              terminationMessagePath: "/dev/termination-log"
              securityContext:
                capabilities: {}
                privileged: false
              restartPolicy: "Always"
              dnsPolicy: "ClusterFirst"
        triggers: 
          - type: "ImageChange"
            imageChangeParams: 
              automatic: true
              containerNames: 
                - "${APPLICATION_NAME}"
              from: 
                kind: "ImageStreamTag"
                name: "${APPLICATION_NAME}:latest"
          - type: "ConfigChange"
#########################
# Layer 4: Abstractions #
#########################
    - kind: "Service"
      apiVersion: "v1"
      metadata: 
        name: "${APPLICATION_NAME}"
        annotations: 
          description: "Exposes and load balances the application pods"
        labels:
          application: "${APPLICATION_NAME}"
      spec: 
        ports:
          - name: 8080-tcp
            port: 8080
            protocol: TCP
            targetPort: 8080
          - name: 8443-tcp
            port: 8443
            protocol: TCP
            targetPort: 8443
        selector: 
          deploymentConfig: "${APPLICATION_NAME}"
    - kind: "Route"
      apiVersion: "v1"
      metadata: 
        name: "${APPLICATION_NAME}"
        annotations: 
          description: "Route for application's service"
        labels:
          application: "${APPLICATION_NAME}"
      spec: 
        host: "${APPLICATION_DOMAIN}"
        port:
          targetPort: "8080"
        to: 
          kind: "Service"
          name: "${APPLICATION_NAME}"
##############
# Parameters #
##############
  parameters: 
    - name: "APPLICATION_NAME"
      displayName: "APPLICATION_NAME"
      description: "The name assigned to all of the objects defined in this template."
      required: true
      value: "workshop-example"
    - name: "NAMESPACE"
      displayName: "Namespace"
      description: "The OpenShift Namespace where the ImageStream resides."
      value: "openshift"
    - name: "SOURCE_REPOSITORY_URL"
      displayName: "Git Repository URL"
      description: "The URL of the repository with your application source code."
      value: "https://github.com/bcalomfirescu/workshop-example.git"
    - name: "SOURCE_REPOSITORY_REF"
      displayName: "Git Reference"
      description: "Set this to a branch name, tag or other ref of your repository if you are not using the default branch."
    - name: "CONTEXT_DIR"
      displayName: "Context Directory"
      description: "Set this to the relative path to your project if it is not in the root of your repository."
    - name: "APPLICATION_DOMAIN"
      displayName: "Application Hostname"
      description: "The exposed hostname that will route to the PrestaShop service, if left blank a value will be defaulted."
      value: ""
    - name: "GITHUB_WEBHOOK_SECRET"
      displayName: "GitHub Webhook Secret"
      description: "A secret string used to configure the GitHub webhook."
      generate: "expression"
      from: "[a-zA-Z0-9]{40}"
    - name: "GENERIC_WEBHOOK_SECRET"
      displayName: "Generic Webhook Secret"
      description: "A secret string used to configure the generic webhook."
      generate: "expression"
      from: "[a-zA-Z0-9]{40}"
